var searchIndex = JSON.parse('{\
"rich_sdl2_ttf_rust":{"doc":"rich-sdl2-ttf-rust","t":[3,11,11,11,11,11,0,11,11,11,11,11,11,11,8,13,13,3,4,8,4,13,3,13,13,8,13,13,13,13,8,4,13,13,13,8,3,13,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,10,11,10,11,11,11,11,10,11,11,11,11,11,11,11,0,11,10,11,10,11,11,11,11,11,11,11,10,11,10,11,11,11,10,11,10,11,10,11,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11],"n":["Ttf","borrow","borrow_mut","default","drop","fmt","font","from","into","new","try_from","try_into","type_id","version","AttributeExt","Blended","Bold","Font","FontHinting","FontSetting","FontStyle","Italic","KerningDisabler","Light","LightSubpixel","MetricExt","Mono","None","Normal","Normal","RenderExt","RenderMode","Shaded","Solid","StrikeThrough","StyleExt","TtfSurface","Underline","as_ptr","ascent","ascent","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","descent","descent","disable_kerning","disable_kerning","drop","drop","drop","eq","eq","eq","faces","faces","family_name","family_name","fmt","fmt","fmt","font_style","font_style","from","from","from","from","from","from","glyph","glyph","height","height","hinting","hinting","into","into","into","into","into","into","is_fixed_width","is_fixed_width","line_skip","line_skip","ne","new","outline_width","outline_width","render","render","render_glyph","render_glyph","rendered_size","save_bmp","set_font_style","set_font_style","set_hinting","set_hinting","set_outline_width","set_outline_width","style_name","style_name","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","background","foreground","foreground","foreground","Glyph","advance","borrow","borrow_mut","from","into","rect","try_from","try_into","type_id"],"q":["rich_sdl2_ttf_rust","","","","","","","","","","","","","","rich_sdl2_ttf_rust::font","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rich_sdl2_ttf_rust::font::RenderMode","","","","rich_sdl2_ttf_rust::font::glyph","","","","","","","","",""],"d":["A root SDL2_ttf controller.","","","","","","Font data managers.","","","Constructs a root controller.","","","","Returns the library version of SDL2_ttf.","An extension for getting the attributes of the fonts.","A too slow, but ultra nice over others.","A <strong>bold</strong> style.","A font data structure.","A hinting for a font.","An extension for settings of the font.","A text style of a font.","A <em>italic</em> style.","A disabler of font kerning. Kerning of the font is …","A light hinting.","A light and subpixel hinting.","An extension for getters of the font metrics.","A monochrome hinting.","A disabled hinting.","Any hinting is not set.","A normal, plain style.","An extension for rendering the text.","A render mode for the font glyphs.","A slow and nice, but with a solid box mode.","A quick and dirty mode.","An strike through style.","An extension of [<code>FontStyle</code>] and outline width …","A surface of TrueType Font.","An underline style.","","Returns the maximum ascent, the hight above baseline of …","","","","","","","","","","","","","","","","","","","","Returns the maximum ascent, the hight below baseline of …","","Disables the font kerning.","","","","","","","","Returns the numbers of the faces, the sub-font in the …","","Returns the family name of the font.","","","","","Returns the current font style.","","","","","","","","Glyph metrics.","Returns the glyph of the font if exists.","Returns the maximum height of the glyph in the font, in …","","Returns the current hinting of the font.","","","","","","","","Returns whether the font is fixed width.","","Returns the line skip height of the font, the recommended …","","","Constructs a font data from file name and point size. The …","Returns the current outline width in pixels.","","Renders the text into the [<code>TtfSurface</code>], or <code>Err</code> on failure.","","Renders the character into the [<code>TtfSurface</code>], or <code>Err</code> on …","","Calculates the rendered size of the text, or <code>Err</code> on …","","Sets the font style.","","Sets the hinting of the font.","","Sets the outline width in pixels.","","Returns the style name of the font.","","","","","","","","","","","","","","","","","","","","","","","A background color, around of a text.","A text color.","A text color.","A text color.","A glyph in a font.","Returns the advance, the offset to the next character in …","","","","","Returns the geometry box of the glyph.","","",""],"i":[0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,2,3,0,0,0,0,3,0,4,4,0,4,4,4,3,0,0,2,2,3,0,0,3,5,6,7,5,8,7,2,4,3,5,8,7,2,4,3,2,4,3,2,4,3,6,7,9,7,5,8,7,2,4,3,10,7,10,7,2,4,3,11,7,5,8,7,2,4,3,0,7,6,7,9,7,5,8,7,2,4,3,10,7,6,7,2,7,11,7,12,7,12,7,7,5,11,7,9,7,11,7,10,7,2,4,3,5,8,7,2,4,3,5,8,7,2,4,3,5,8,7,2,4,3,13,14,13,15,0,16,16,16,16,16,16,16,16,16],"f":[null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["sdlversion",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["rawsurface",3],["nonnull",3]]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rendermode",4]],[[],["fonthinting",4]],[[],["fontstyle",4]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["kerningdisabler",3]],[[],["kerningdisabler",3]],[[]],[[]],[[]],[[["rendermode",4]],["bool",15]],[[["fonthinting",4]],["bool",15]],[[["fontstyle",4]],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],[["option",4],["cow",4]]],[[],[["option",4],["cow",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["fontstyle",4]],[[],["fontstyle",4]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["char",15]],[["option",4],["glyph",3]]],[[],["u32",15]],[[],["u32",15]],[[],["fonthinting",4]],[[],["fonthinting",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[["rendermode",4]],["bool",15]],[[["option",4],["str",15],["u32",15],["usize",15],["ttf",3]],["result",6]],[[],["u32",15]],[[],["u32",15]],[[["rendermode",4],["str",15]],[["result",6],["ttfsurface",3]]],[[["rendermode",4],["str",15]],[["result",6],["ttfsurface",3]]],[[["rendermode",4],["char",15]],[["result",6],["ttfsurface",3]]],[[["rendermode",4],["char",15]],[["result",6],["ttfsurface",3]]],[[["str",15]],[["result",6],["size",3]]],[[["str",15]],[["bmpsaveerror",3],["result",4]]],[[["fontstyle",4]]],[[["fontstyle",4]]],[[["fonthinting",4]]],[[["fonthinting",4]]],[[["u32",15]]],[[["u32",15]]],[[],[["option",4],["cow",4]]],[[],[["option",4],["cow",4]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[],["i32",15]],[[]],[[]],[[]],[[]],[[],["rect",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Ttf"],[4,"RenderMode"],[4,"FontStyle"],[4,"FontHinting"],[3,"TtfSurface"],[8,"MetricExt"],[3,"Font"],[3,"KerningDisabler"],[8,"FontSetting"],[8,"AttributeExt"],[8,"StyleExt"],[8,"RenderExt"],[13,"Shaded"],[13,"Solid"],[13,"Blended"],[3,"Glyph"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};